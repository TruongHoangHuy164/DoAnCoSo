@model DoAnLTW.Areas.Admin.Models.StatisticsViewModel

@{
    ViewData["Title"] = "Thống kê doanh thu";
    Layout = "~/Areas/Admin/Views/Shared/layoutAdmin.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
<style>
    .h2{
        color:cornflowerblue;
    }
    .stats-card {
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
        text-align: center;
        transition: transform 0.2s;
    }

        .stats-card:hover {
            transform: scale(1.05);
        }

        .stats-card i {
            font-size: 2rem;
            color: #FFD700;
        }

        .stats-card h5 {
            font-weight: 600;
            margin: 10px 0;
        }

        .stats-card p {
            font-size: 1.5rem;
            color: #000;
        }

    .chart-container {
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin-bottom: 20px;
    }

    .filter-container {
        margin-bottom: 20px;
    }

    .table-container {
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin-bottom: 20px;
    }
</style>

<div class="container-fluid">
    <h2 class="mb-4">Thống kê doanh thu</h2>

    <!-- Bộ lọc năm -->
    <div class="filter-container">
        <form asp-action="Index" method="get">
            <div class="form-group">
                <label for="year">Chọn năm:</label>
                <select name="year" id="year" class="form-control d-inline-block w-auto" onchange="this.form.submit()">
                    @foreach (var y in Model.AvailableYears)
                    {
                        <option value="@y" selected="@(y == Model.SelectedYear)">@y</option>
                    }
                </select>
            </div>
        </form>
    </div>

    <!-- Tổng quan -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="stats-card">
                <i class="fas fa-dollar-sign"></i>
                <h5>Tổng doanh thu</h5>
                <p>@Model.TotalRevenue.ToString("N0") VNĐ</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card">
                <i class="fas fa-shopping-cart"></i>
                <h5>Tổng đơn hàng</h5>
                <p>@Model.TotalOrders</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card">
                <i class="fas fa-paw"></i>
                <h5>Tổng dịch vụ thú cưng</h5>
                <p>@Model.TotalPetServices</p>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stats-card">
                <i class="fas fa-box"></i>
                <h5>Tổng sản phẩm</h5>
                <p>@Model.TotalProducts</p>
            </div>
        </div>
    </div>

    <!-- Chi tiết Tổng Doanh Thu -->
    <div class="table-container">
        <h5>Chi tiết Tổng Doanh Thu</h5>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Nguồn</th>
                    <th>Doanh thu (VNĐ)</th>
                    <th>Tỷ lệ (%)</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Đơn hàng</td>
                    <td>@Model.OrderRevenue.ToString("N0")</td>
                    <td>@(Model.TotalRevenue > 0 ? (Model.OrderRevenue / Model.TotalRevenue * 100).ToString("F2") : "0")%</td>
                </tr>
                <tr>
                    <td>Dịch vụ thú cưng</td>
                    <td>@Model.PetServiceRevenue.ToString("N0")</td>
                    <td>@(Model.TotalRevenue > 0 ? (Model.PetServiceRevenue / Model.TotalRevenue * 100).ToString("F2") : "0")%</td>
                </tr>
                <tr>
                    <td><strong>Tổng</strong></td>
                    <td><strong>@Model.TotalRevenue.ToString("N0")</strong></td>
                    <td><strong>100%</strong></td>
                </tr>
            </tbody>
        </table>
    </div>

    <!-- Biểu đồ -->
    <div class="row">
        <!-- Biểu đồ tròn: Doanh thu theo danh mục -->
        <div class="col-md-6">
            <div class="chart-container">
                <h5>Doanh thu theo danh mục</h5>
                <canvas id="revenueByCategoryChart"></canvas>
            </div>
        </div>
        <!-- Biểu đồ tròn: Doanh thu theo thương hiệu -->
        <div class="col-md-6">
            <div class="chart-container">
                <h5>Doanh thu theo thương hiệu</h5>
                <canvas id="revenueByBrandChart"></canvas>
            </div>
        </div>
        <!-- Biểu đồ tròn: Đơn hàng theo trạng thái -->
        <div class="col-md-6">
            <div class="chart-container">
                <h5>Đơn hàng theo trạng thái</h5>
                <canvas id="ordersByStatusChart"></canvas>
            </div>
        </div>
        <!-- Biểu đồ tròn: Dịch vụ theo trạng thái -->
        <div class="col-md-6">
            <div class="chart-container">
                <h5>Dịch vụ theo trạng thái</h5>
                <canvas id="petServicesByStatusChart"></canvas>
            </div>
        </div>
        <!-- Biểu đồ cột: Doanh thu theo tháng -->
        <div class="col-md-6">
            <div class="chart-container">
                <h5>Doanh thu theo tháng</h5>
                <canvas id="revenueByMonthChart"></canvas>
            </div>
        </div>
        <!-- Biểu đồ cột: Doanh thu theo quý -->
        <div class="col-md-6">
            <div class="chart-container">
                <h5>Doanh thu theo quý</h5>
                <canvas id="revenueByQuarterChart"></canvas>
            </div>
        </div>
        <!-- Biểu đồ cột: Sản phẩm bán ra theo danh mục -->
        <div class="col-md-6">
            <div class="chart-container">
                <h5>Sản phẩm bán ra theo danh mục</h5>
                <canvas id="soldProductsByCategoryChart"></canvas>
            </div>
        </div>
        <!-- Biểu đồ cột: Dịch vụ theo loại dịch vụ -->
        <div class="col-md-6">
            <div class="chart-container">
                <h5>Dịch vụ theo loại dịch vụ</h5>
                <canvas id="petServicesByServiceTypeChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Top sản phẩm và dịch vụ -->
    <div class="row">
        <!-- Top 5 sản phẩm bán chạy -->
        <div class="col-md-6">
            <div class="table-container">
                <h5>Top 5 sản phẩm bán chạy</h5>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Tên sản phẩm</th>
                            <th>Số lượng bán</th>
                            <th>Doanh thu (VNĐ)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.TopSellingProducts.Any())
                        {
                            foreach (var product in Model.TopSellingProducts)
                            {
                                <tr>
                                    <td>@product.ProductName</td>
                                    <td>@product.QuantitySold</td>
                                    <td>@product.Revenue.ToString("N0")</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="3">Không có dữ liệu</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <!-- Top 5 dịch vụ phổ biến -->
        <div class="col-md-6">
            <div class="table-container">
                <h5>Top 5 dịch vụ phổ biến</h5>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Tên dịch vụ</th>
                            <th>Số lần đặt</th>
                            <th>Doanh thu (VNĐ)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.TopPopularServices.Any())
                        {
                            foreach (var service in Model.TopPopularServices)
                            {
                                <tr>
                                    <td>@service.ServiceName</td>
                                    <td>@service.BookingCount</td>
                                    <td>@service.Revenue.ToString("N0")</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="3">Không có dữ liệu</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.3.0/dist/chart.umd.min.js"></script>
    <script>
        // Hàm tạo màu ngẫu nhiên cho biểu đồ
        function getRandomColors(count) {
            const colors = [];
            for (let i = 0; i < count; i++) {
                const r = Math.floor(Math.random() * 255);
                const g = Math.floor(Math.random() * 255);
                const b = Math.floor(Math.random() * 255);
                colors.push(`rgba(${r}, ${g}, ${b}, 0.7)`);
            }
            return colors;
        }

        // Biểu đồ tròn: Doanh thu theo danh mục
        const revenueByCategoryCtx = document.getElementById('revenueByCategoryChart').getContext('2d');
        new Chart(revenueByCategoryCtx, {
            type: 'pie',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.RevenueByCategory.Keys.Select(k => $"'{k}'")))],
                datasets: [{
                    data: [@Html.Raw(string.Join(",", Model.RevenueByCategory.Values))],
                    backgroundColor: getRandomColors(@Model.RevenueByCategory.Count)
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'top' },
                    title: { display: true, text: 'Doanh thu theo danh mục' }
                }
            }
        });

        // Biểu đồ tròn: Doanh thu theo thương hiệu
        const revenueByBrandCtx = document.getElementById('revenueByBrandChart').getContext('2d');
        new Chart(revenueByBrandCtx, {
            type: 'pie',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.RevenueByBrand.Keys.Select(k => $"'{k}'")))],
                datasets: [{
                    data: [@Html.Raw(string.Join(",", Model.RevenueByBrand.Values))],
                    backgroundColor: getRandomColors(@Model.RevenueByBrand.Count)
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'top' },
                    title: { display: true, text: 'Doanh thu theo thương hiệu' }
                }
            }
        });

        // Biểu đồ tròn: Đơn hàng theo trạng thái
        const ordersByStatusCtx = document.getElementById('ordersByStatusChart').getContext('2d');
        new Chart(ordersByStatusCtx, {
            type: 'pie',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.OrdersByStatus.Keys.Select(k => $"'{k}'")))],
                datasets: [{
                    data: [@Html.Raw(string.Join(",", Model.OrdersByStatus.Values))],
                    backgroundColor: getRandomColors(@Model.OrdersByStatus.Count)
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'top' },
                    title: { display: true, text: 'Đơn hàng theo trạng thái' }
                }
            }
        });

        // Biểu đồ tròn: Dịch vụ theo trạng thái
        const petServicesByStatusCtx = document.getElementById('petServicesByStatusChart').getContext('2d');
        new Chart(petServicesByStatusCtx, {
            type: 'pie',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.PetServicesByStatus.Keys.Select(k => $"'{k}'")))],
                datasets: [{
                    data: [@Html.Raw(string.Join(",", Model.PetServicesByStatus.Values))],
                    backgroundColor: getRandomColors(@Model.PetServicesByStatus.Count)
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'top' },
                    title: { display: true, text: 'Dịch vụ theo trạng thái' }
                }
            }
        });

        // Biểu đồ cột: Doanh thu theo tháng
        const revenueByMonthCtx = document.getElementById('revenueByMonthChart').getContext('2d');
        new Chart(revenueByMonthCtx, {
            type: 'bar',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.RevenueByMonth.Keys.Select(k => $"'{k}'")))],
                datasets: [{
                    label: 'Doanh thu (VNĐ)',
                    data: [@Html.Raw(string.Join(",", Model.RevenueByMonth.Values))],
                    backgroundColor: 'rgba(255, 215, 0, 0.7)',
                    borderColor: 'rgba(255, 215, 0, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: { beginAtZero: true, title: { display: true, text: 'Doanh thu (VNĐ)' } },
                    x: { title: { display: true, text: 'Tháng' } }
                },
                plugins: {
                    legend: { display: false },
                    title: { display: true, text: 'Doanh thu theo tháng' }
                }
            }
        });

        // Biểu đồ cột: Doanh thu theo quý
        const revenueByQuarterCtx = document.getElementById('revenueByQuarterChart').getContext('2d');
        new Chart(revenueByQuarterCtx, {
            type: 'bar',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.RevenueByQuarter.Keys.Select(k => $"'{k}'")))],
                datasets: [{
                    label: 'Doanh thu (VNĐ)',
                    data: [@Html.Raw(string.Join(",", Model.RevenueByQuarter.Values))],
                    backgroundColor: 'rgba(0, 255, 127, 0.7)',
                    borderColor: 'rgba(0, 255, 127, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: { beginAtZero: true, title: { display: true, text: 'Doanh thu (VNĐ)' } },
                    x: { title: { display: true, text: 'Quý' } }
                },
                plugins: {
                    legend: { display: false },
                    title: { display: true, text: 'Doanh thu theo quý' }
                }
            }
        });

        // Biểu đồ cột: Sản phẩm bán ra theo danh mục
        const soldProductsByCategoryCtx = document.getElementById('soldProductsByCategoryChart').getContext('2d');
        new Chart(soldProductsByCategoryCtx, {
            type: 'bar',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.SoldProductsByCategory.Keys.Select(k => $"'{k}'")))],
                datasets: [{
                    label: 'Số lượng bán',
                    data: [@Html.Raw(string.Join(",", Model.SoldProductsByCategory.Values))],
                    backgroundColor: 'rgba(0, 123, 255, 0.7)',
                    borderColor: 'rgba(0, 123, 255, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: { beginAtZero: true, title: { display: true, text: 'Số lượng bán' } },
                    x: { title: { display: true, text: 'Danh mục' } }
                },
                plugins: {
                    legend: { display: false },
                    title: { display: true, text: 'Sản phẩm bán ra theo danh mục' }
                }
            }
        });

        // Biểu đồ cột: Dịch vụ theo loại dịch vụ
        const petServicesByServiceTypeCtx = document.getElementById('petServicesByServiceTypeChart').getContext('2d');
        new Chart(petServicesByServiceTypeCtx, {
            type: 'bar',
            data: {
                labels: [@Html.Raw(string.Join(",", Model.PetServicesByServiceType.Keys.Select(k => $"'{k}'")))],
                datasets: [{
                    label: 'Số lần đặt',
                    data: [@Html.Raw(string.Join(",", Model.PetServicesByServiceType.Values))],
                    backgroundColor: 'rgba(255, 99, 132, 0.7)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: { beginAtZero: true, title: { display: true, text: 'Số lần đặt' } },
                    x: { title: { display: true, text: 'Loại dịch vụ' } }
                },
                plugins: {
                    legend: { display: false },
                    title: { display: true, text: 'Dịch vụ theo loại dịch vụ' }
                }
            }
        });
    </script>
}